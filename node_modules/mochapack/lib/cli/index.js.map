{"version":3,"sources":["../../src/cli/index.js"],"names":["resolve","mod","absolute","file","path","exit","lazy","code","process","on","cliOptions","argv","slice","configOptions","opts","requiresWebpackConfig","webpackConfig","defaultOptions","options","require","forEach","include","map","webpackEnv","mode","mochaWebpack","f","addInclude","extensions","fallbackFileGlob","fileGlob","glob","files","addEntry","recursive","cwd","bail","reporter","reporterOptions","ui","interactive","clearTerminal","fgrep","grep","invert","checkLeaks","ignoreLeaks","fullTrace","fullStackTrace","quiet","useColors","colors","useInlineDiffs","inlineDiffs","timeout","retries","slow","asyncOnly","delay","growl","forbidOnly","then","watch","run","failures","catch","e","console","error","stack"],"mappings":"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","file":"index.js","sourcesContent":["import path from 'path';\nimport _ from 'lodash';\n\nimport parseArgv from './parseArgv';\nimport { existsFileSync } from '../util/exists';\nimport parseConfig from './parseConfig';\nimport requireWebpackConfig from './requireWebpackConfig';\nimport { ensureGlob, extensionsToGlob } from '../util/glob';\nimport createMochaWebpack from '../createMochaWebpack';\n\n\nfunction resolve(mod) {\n  const absolute = existsFileSync(mod) || existsFileSync(`${mod}.js`);\n  const file = absolute ? path.resolve(mod) : mod;\n  return file;\n}\n\nfunction exit(lazy, code) {\n  if (lazy) {\n    process.on('exit', () => {\n      process.exit(code);\n    });\n  } else {\n    process.exit(code);\n  }\n}\n\nconst cliOptions = parseArgv(process.argv.slice(2), true);\nconst configOptions = parseConfig(cliOptions.opts);\nconst requiresWebpackConfig = cliOptions.webpackConfig != null || configOptions.webpackConfig != null;\nconst defaultOptions = parseArgv([]);\n\nconst options = _.defaults({}, cliOptions, configOptions, defaultOptions);\n\noptions.require.forEach((mod) => {\n  require(resolve(mod)); // eslint-disable-line global-require, import/no-dynamic-require\n});\n\noptions.include = options.include.map(resolve);\n\noptions.webpackConfig = requireWebpackConfig(\n  options.webpackConfig,\n  requiresWebpackConfig,\n  options.webpackEnv,\n  options.mode,\n);\n\nconst mochaWebpack = createMochaWebpack();\n\noptions.include.forEach((f) => mochaWebpack.addInclude(f));\n\nconst extensions = _.get(options.webpackConfig, 'resolve.extensions', ['.js']);\nconst fallbackFileGlob = extensionsToGlob(extensions);\nconst fileGlob = options.glob != null ? options.glob : fallbackFileGlob;\n\noptions.files.forEach((f) => mochaWebpack.addEntry(ensureGlob(f, options.recursive, fileGlob)));\n\nmochaWebpack.cwd(process.cwd());\nmochaWebpack.webpackConfig(options.webpackConfig);\nmochaWebpack.bail(options.bail);\nmochaWebpack.reporter(options.reporter, options.reporterOptions);\nmochaWebpack.ui(options.ui);\nmochaWebpack.interactive(options.interactive);\nmochaWebpack.clearTerminal(options.clearTerminal);\n\nif (options.fgrep) {\n  mochaWebpack.fgrep(options.fgrep);\n}\n\nif (options.grep) {\n  mochaWebpack.grep(options.grep);\n}\n\nif (options.invert) {\n  mochaWebpack.invert();\n}\n\nif (options.checkLeaks) {\n  mochaWebpack.ignoreLeaks(false);\n}\n\nif (options.fullTrace) {\n  mochaWebpack.fullStackTrace();\n}\n\nif (options.quiet) {\n  mochaWebpack.quiet();\n}\n\nmochaWebpack.useColors(options.colors);\nmochaWebpack.useInlineDiffs(options.inlineDiffs);\nmochaWebpack.timeout(options.timeout);\n\nif (options.retries) {\n  mochaWebpack.retries(options.retries);\n}\n\nmochaWebpack.slow(options.slow);\n\nif (options.asyncOnly) {\n  mochaWebpack.asyncOnly();\n}\n\nif (options.delay) {\n  mochaWebpack.delay();\n}\n\nif (options.growl) {\n  mochaWebpack.growl();\n}\n\nif (options.forbidOnly) {\n  mochaWebpack.forbidOnly();\n}\n\nPromise\n  .resolve()\n  .then(() => {\n    if (options.watch) {\n      return mochaWebpack.watch();\n    }\n    return mochaWebpack.run();\n  })\n  .then((failures) => {\n    exit(options.exit, failures);\n  })\n  .catch((e) => {\n    if (e) {\n      console.error(e.stack); // eslint-disable-line\n    }\n    exit(options.exit, 1);\n  });\n"]}